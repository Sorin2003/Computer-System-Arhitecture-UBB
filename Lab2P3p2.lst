     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 04                          b db 4
    16 00000002 05                          c db 5
    17 00000003 07                          d db 7
    18 00000004 2823                        e dw 9000
    19 00000006 F106                        f dw 1777
    20 00000008 0E00                        g dw 14
    21 0000000A 0F00                        h dw 15
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27 00000000 66A1[06000000]                  mov ax, word[f] ;word f in ax
    28 00000006 668B1D[04000000]                mov bx, word[e] ;word e in bx
    29 0000000D 6683EB02                        sub bx, 2       ;(e-2) -> bx
    30 00000011 66F7E3                          mul bx          ;f*(e-2) -> eax
    31                                          ; exit(0)
    32 00000014 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000016 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
