     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                        ;find the pozition of e in a string of doublewords
    15 00000000 01000000020000000B-           s dd 1,2,11,3,11,4,5,11
    15 00000009 000000030000000B00-
    15 00000012 000004000000050000-
    15 0000001B 000B000000         
    16 00000020 64000000                      e dd 100 ; 2,4,7
    17                                        l equ ($-s)/4
    18 00000024 00<rept>                      d times l db 0
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B909000000                      mov ecx, l
    24 00000005 BF[00000000]                    mov edi, s
    25 0000000A BE[24000000]                    mov esi, d 
    26 0000000F A1[20000000]                    mov eax, [e]
    27                                          jecxz end_loop
    27          ******************       error: symbol `end_loop' undefined
    28 00000014 B300                            mov bl, 0
    29                                          repeat:
    30 00000016 AF                                  scasd ; cmp eax,[edi];edi+1
    31 00000017 7505                                jne next
    32 00000019 881E                                mov [esi],bl
    33 0000001B 46                                  inc esi
    34                                          next:
    35 0000001C FEC3                            inc bl
    36 0000001E E2F6                            loop repeat
    37                                          end_pr:
    38                                          
    39                                      
    40                                          ; exit(0)
    41 00000020 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 00000022 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
