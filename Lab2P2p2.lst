     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0700                        a dw 7
    15 00000002 0400                        b dw 4
    16 00000004 0500                        c dw 5
    17 00000006 0800                        d dw 8
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                      ;(a-b+c)-(d+d)
    23 00000000 66A1[00000000]                  mov ax, word[a]  ;a in ax
    24 00000006 662B05[02000000]                sub ax, word[b]  ;a-b -> ax
    25 0000000D 660305[04000000]                add ax, word[c]  ;(a-b+c) -> ax
    26 00000014 668B1D[06000000]                mov bx, word[d]  ; d in bx
    27 0000001B 66031D[06000000]                add bx, word[d]  ;(d+d) in bx
    28 00000022 6629D8                          sub ax, bx       ;ax-bx (a-b+c)-(d+d) -> ax
    29                                          ; exit(0)
    30 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
