     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 05                          a db 5
    15 00000001 07                          b db 7
    16 00000002 05                          c db 5
    17 00000003 04                          d db 4
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A0[00000000]                    mov al, byte[a] ;byte a in al
    23 00000005 2A05[01000000]                  sub al, byte[b] ;substract byte b from al
    24 0000000B 2A05[03000000]                  sub al, byte[d] ;substract byte d from al
    25 00000011 0402                            add al, 2       ;add 2 to al
    26 00000013 0205[02000000]                  add al, byte[c] ;add byte c to al
    27 00000019 B40A                            mov ah, 10      ;10 in ah
    28 0000001B 2A25[01000000]                  sub ah, byte[b] ;substarct byte b from ah
    29 00000021 00E0                            add al, ah      ;add al with ah
    30                                          
    31                                          
    32                                          ; exit(0)
    33 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
